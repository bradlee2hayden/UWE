/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Practical3;

import java.util.Arrays;

/**
 *
 * @author Bradlee
 */
public class BCH10 extends javax.swing.JFrame {

    /**
     * Creates new form BCH10
     */
    public BCH10() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Verify");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText("BCH Digits");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addGap(125, 125, 125))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextField1.setText("");
        jTextArea1.setText("");

    }//GEN-LAST:event_jButton2ActionPerformed


    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

        //get entered input from textfield
        String sInput = jTextField1.getText();

        //set needed variables for algorithms
        int p, q, r, i, j, a, b, quad;
        //set 5 arrays - input, output, syndromes, inverse table and sqroot table, one double array for syndrome matrix instead of copy and paste in for loop
        int[] dInput = new int[10];
        int[] dOutput = new int[10];
        int[] synd = new int[4];
        int[] inverse = {0, 1, 6, 4, 3, 9, 2, 8, 7, 5, 10};
        int[] sqrt = {0, 1, 0, 5, 2, 4, 0, 0, 0, 3, 0};
        int[][] syndromes = {
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 2, 3, 4, 5, 6, 7, 8, 9, 10},
            {1, 4, 9, 5, 3, 3, 5, 9, 4, 1},
            {1, 8, 5, 9, 4, 7, 2, 6, 3, 10}
        };

        //populate input and output arrays using parseint and set output
        for (i = 0; i < 10; i++) {
            dInput[i] = Integer.parseInt(String.valueOf(sInput.charAt(i)));
            dOutput[i] = dInput[i];
        }

        //get syndromes using syndrome matrix
        for (i = 0; i < 4; i++) {
            for (j = 0; j < 10; j++) {
                synd[i] += dInput[j] * syndromes[i][j];
            }
            synd[i] = negMod11(synd[i]);
        }

        //set pqr values using syndromes calculated above
        p = negMod11((synd[1] * synd[1]) - (synd[0] * synd[2]));
        q = negMod11((synd[0] * synd[3]) - (synd[1] * synd[2]));
        r = negMod11((synd[2] * synd[2]) - (synd[1] * synd[3]));
        quad = negMod11((q * q) - (4 * p * r));

        //determine no errors, else its a specific error, must put catches in specific place
        //no errors if syndromes = 0
        if ((synd[0] + synd[1] + synd[2] + synd[3]) == 0) {
            jTextArea1.setText("No errors");
            //else double error if p q r = 0
        } else if (p == 0 && q == 0 && r == 0) {
            //calculate i position and a magnitude
            i = negMod11(synd[1] * inverse[synd[0]]);
            a = synd[0];
            //if pos i = 0 then print error
            if (i == 0) {
                jTextArea1.setText("error: i = 0");
                //else correct position i using magnitude a
            } else {
                dOutput[i - 1] = negMod11(dOutput[i - 1] - a);
                jTextArea1.setText("p q r values: " + p + " " + q + " " + r + "\n" + "syn values: " + Arrays.toString(synd) + "\noutput: " + Arrays.toString(dOutput) + "\ni: " + i + " a: " + a + "\n");
            }
            //else if quadratic != 0, calculate for double error (pos i and j, magn a and b) using mod11 function
        } else {
            if (sqrt[quad] != 0) {
                quad = sqrt[quad];
                i = negMod11(negMod11((-q) + quad) * inverse[negMod11(2 * p)]);
                j = negMod11(negMod11((-q) - quad) * inverse[negMod11(2 * p)]);
                //if pos i or j = 0, print error
                if (i == 0 || j == 0) {
                    jTextArea1.setText("error: i and j = 0");
                    //else calc mag a and b, fix pos i and j using mag a and b
                } else {
                    b = negMod11(negMod11(((i * synd[0]) - synd[1])) * inverse[negMod11((i - j))]);
                    a = negMod11(synd[0] - b);
                    dOutput[i - 1] = negMod11(dOutput[i - 1] - a);
                    dOutput[j - 1] = negMod11(dOutput[j - 1] - b);
                    //if fixed pos i and j = 10, print error
                    if (dOutput[i - 1] == 11 || dOutput[j - 1] == 11) {
                        jTextArea1.setText("error: corrected value i or j = 11");
                        //else print fixed output
                    } else {
                        jTextArea1.setText("p q r values: " + p + " " + q + " " + r + "\n" + "syn values: " + Arrays.toString(synd) + "\noutput: " + Arrays.toString(dOutput) + "\ni: " + i + " a: " + a + " j: " + j + " b: " + b + "\n");
                    }
                }
                //if sqrt[quad] == 0, print error
            } else {
                jTextArea1.setText("error: no valid square");

            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    //mod11 function for keeping it a pos 
    public int negMod11(int x) {

        x = x % 11;

        if (x < 0) {

            x += 11;
        }

        return x;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BCH10.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BCH10.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BCH10.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BCH10.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BCH10().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
